package Chat;


/**
* Chat/ChatServerSvcsPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from Chat.idl
* Wednesday, April 13, 2016 6:17:13 PM EDT
*/

public abstract class ChatServerSvcsPOA extends org.omg.PortableServer.Servant
 implements Chat.ChatServerSvcsOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("getNextId", new java.lang.Integer (0));
    _methods.put ("register", new java.lang.Integer (1));
    _methods.put ("unRegister", new java.lang.Integer (2));
    _methods.put ("sendMsg", new java.lang.Integer (3));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // Chat/ChatServerSvcs/getNextId
       {
         int $result = (int)0;
         $result = this.getNextId ();
         out = $rh.createReply();
         out.write_long ($result);
         break;
       }

       case 1:  // Chat/ChatServerSvcs/register
       {
         try {
           Chat.ChatClientSvcs clientRef = Chat.ChatClientSvcsHelper.read (in);
           this.register (clientRef);
           out = $rh.createReply();
         } catch (Chat.CannotEstablishConnection $ex) {
           out = $rh.createExceptionReply ();
           Chat.CannotEstablishConnectionHelper.write (out, $ex);
         } catch (Chat.DuplicateClient $ex) {
           out = $rh.createExceptionReply ();
           Chat.DuplicateClientHelper.write (out, $ex);
         }
         break;
       }

       case 2:  // Chat/ChatServerSvcs/unRegister
       {
         try {
           Chat.ChatClientSvcs clientRef = Chat.ChatClientSvcsHelper.read (in);
           this.unRegister (clientRef);
           out = $rh.createReply();
         } catch (Chat.UnknownClient $ex) {
           out = $rh.createExceptionReply ();
           Chat.UnknownClientHelper.write (out, $ex);
         }
         break;
       }

       case 3:  // Chat/ChatServerSvcs/sendMsg
       {
         try {
           int t[] = Chat.TimeVectorHelper.read (in);
           Chat.ChatClientSvcs clientRef = Chat.ChatClientSvcsHelper.read (in);
           String msg = in.read_string ();
           int myId = in.read_long ();
           this.sendMsg (t, clientRef, msg, myId);
           out = $rh.createReply();
         } catch (Chat.UnknownClient $ex) {
           out = $rh.createExceptionReply ();
           Chat.UnknownClientHelper.write (out, $ex);
         }
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:Chat/ChatServerSvcs:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public ChatServerSvcs _this() 
  {
    return ChatServerSvcsHelper.narrow(
    super._this_object());
  }

  public ChatServerSvcs _this(org.omg.CORBA.ORB orb) 
  {
    return ChatServerSvcsHelper.narrow(
    super._this_object(orb));
  }


} // class ChatServerSvcsPOA
